---
title: "Bootstrapping Cross Platform MSBuild with XBuild and NuGet"
description: "Now that MSBuild is open source and cross-platform, you easily bootstrap it via XBuild and NuGet to build on a Mac too."
layout: post
tags: programming, msbuild, xbuild, nuget
---
# Bootstrapping Cross Platform MSBuild with XBuild and NuGet

I have to admit I'm a fan of MSBuild. Not necessarily a fan of the file format, 
but of the feature set. [At work](http://www.xamarin.com), I've encountered now 
and then inconsistencies and missing features in XBuild that I just had to work 
around (the most annoying one being the lack of inline code tasks!). Well, no more!

One of the core uses of MSBuild for me is the CI (and full product) build script. 
It allows me to have a single build script that can be run localy as well as on 
a build server and produce identical results. This is invaluable. It can do so 
much more than just build! I can make it calculate product version information from 
git commit information, download and install dependencies, push tags and upload 
releases and what-not.

Since the [xpath branch](https://github.com/Microsoft/MSBuild/tree/xplat) of MSBuild
isn't still official, and I didn't find it released as a NuGet package yet, I just 
simply built it on Windows and Mac and bundled both versions as the 
[MSBuild NuGet](http://www.nuget.org/packages/MSBuild).

Now bootstrapping it on the Mac is really simple:

* Install MSBuild NuGet
* Invoke MSBuild with Mono, passing build.proj

Since this is only needed on the Mac, we don't need any fancy conditionals in the 
build project or anything. This is how it looks like currently:

    // TODO: xbuild.proj content

Of course if you need to be able to invoke different targets and pass properties, 
it's not that trivial, but for bootstrapping a CI server that runs on *nix and get 
it going, you don't need anything other than that.




